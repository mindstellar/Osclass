# GitHub Action for Osclass
name: Osclass Release
on:
  push:
      tags: 
        - '*'
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build  
        run: sh ./.build.sh
        shell: bash
      - run: echo "Uploading release package"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set output
        id: vars
      - run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      - run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
      - name: Update draft to ${{ steps.vars.outputs.tag }}
        id: update_draft
      - run: |
          curl \
          -X POST \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          https://api.github.com/repos/mindstellar/Osclass/releases/ \
          -d '{"tag_name":"${{ steps.vars.outputs.tag }}", "name": "Osclass v${{ steps.vars.outputs.tag }}", "draft": "true", "prerelease": "true"}'
      - name: Upload asset to ${{ github.event.client_payload.release_tag }}
        run: |
          curl \
          -X POST \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Content-Type: application/zip' \
          -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          https://api.github.com/repos/mindstellar/Osclass/releases/${{ steps.update_draft.outputs.release_id }}/assets \
          -d '{"name":"./release/osclass_v${{ steps.vars.outputs.tag }}.zip"}'
  
        
      
          
